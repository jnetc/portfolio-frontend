import { useContext, createContext, useState } from 'react';
import { NextPage, GetStaticProps } from 'next';
import Head from 'next/head';

// Sanity CMS
import { groq } from 'next-sanity';
// import { PortableText } from '../lib/sanity';
import { getClient } from '../lib/sanity.server';

// Components
import Navigation from '@Navigation';
import Home from '@Home';
import Portfolio from '@Portfolio';
// Types
import { Data, Store } from '@Types';
// Helpers
import { transformLocalization } from '@Helpers/functions';

// Create context
const state: Store = {
  context: null,
  lang: '',
  theme: 'light',
  switchTheme: theme => theme,
};

const Store = createContext(state);

export const useStore = () => {
  return useContext(Store);
};
//

const App: NextPage<{ data: Data; locale: string }> = ({ data, locale }) => {
  const currentLangData = transformLocalization(locale, data);
  const [theme, switchTheme] = useState(state.theme);

  return (
    <Store.Provider
      value={{
        context: currentLangData,
        lang: locale,
        theme,
        switchTheme,
      }}
    >
      <>
        <Head>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <title>Create Next App </title>
        </Head>

        <Navigation />
        <main>
          <Home />
          <Portfolio />
        </main>
        {/* <main>
          <h1>Welcome to üòÉ</h1>
          <button>üòç</button>

          <PortableText blocks={currentLangData.slogan} />
        </main> */}
      </>
    </Store.Provider>
  );
};

// Query value

export const getStaticProps: GetStaticProps = async ({
  preview = false,
  locale,
}) => {
  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
  // navigation {${locale}}
  const query = groq`*[_type == 'main'] {
    navigation,
    slogan,
    action_btn,
    second_btn

  }`;

  const [data] = await getClient(preview).fetch(query);

  console.log('staticprops...', preview, data, locale);

  return {
    props: {
      data,
      locale,
    },
  };
  // return {
  //   props: {
  //     data: {
  //       action_btn: {
  //         en: 'Hire me',
  //         ru: '–ù–∞–π–¥–∏ –º–µ–Ω—è',
  //       },
  //       second_btn: {
  //         en: 'My works',
  //         ru: '–ú–æ–∏ —Ä–∞–±–æ—Ç—ã',
  //       },
  //       navigation: {
  //         en: ['Home', 'Portfolio', 'Skills', 'About'],
  //         ru: ['–ù–∞—á–∞–ª—å–Ω–∞—è', '–ü–æ—Ä—Ñ–æ–ª–∏–æ', '–ù–∞–≤—ã–∫–∏', '–û–±–æ –º–Ω–µ'],
  //       },
  //       slogan: {
  //         en: 'Together, we will make your product in the digital world ',
  //         ru: '–í–º–µ—Å—Ç–µ –º—ã —Å–¥–µ–ª–∞–µ–º –≤–∞—à –ø—Ä–æ–¥—É–∫—Ç –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ ',
  //       },
  //     },
  //     locale,
  //   },
  // };
};

export default App;
